"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[7286],{91746:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(85893),o=n(11151);const r={},a=void 0,s={id:"estimating/A-Quick-Story",title:"A-Quick-Story",description:"2. A Quick Story",source:"@site/docs/estimating/A-Quick-Story.md",sourceDirName:"estimating",slug:"/estimating/A-Quick-Story",permalink:"/estimating/A-Quick-Story",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/estimating/A-Quick-Story.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stop Estimating, Start Navigating",permalink:"/estimating/Stop-Estimating-Start-Navigating"},next:{title:"On Complexity",permalink:"/complexity/Start"}},c={},l=[{value:"2. A Quick Story",id:"2-a-quick-story",level:3}];function d(t){const e={em:"em",h3:"h3",p:"p",...(0,o.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"2-a-quick-story",children:"2. A Quick Story"}),"\n",(0,i.jsxs)(e.p,{children:["Here is an example from earlier in the year about how I managed to ",(0,i.jsx)(e.em,{children:"completely nail"})," an estimate, and yet, still miss a deadline.  I had a large body of code in Java (some 300 classes), and I wanted to get it running inside a browser (I won't go into why).   Now, there are a number of ways to solve this problem - various VMs run inside the browser for example - but I decided that, since I was interested in learning Kotlin, what I would do would be to get IntelliJ IDEA to convert the Java code into Kotlin for me.  Kotlin can be compiled into Javascript and run in the browser.  I could go class-by-class, and since I had a large body of unit tests that I could keep working, I knew it would be ok."]}),"\n",(0,i.jsx)(e.p,{children:"After converting ten classes in a day, I thought - this is likely to take about 30 work-days to do.  And, sure enough, after about 28 days, I was done.  It didn't really matter that I started with the easy classes first, because I got better at resolving the issues in the conversion process as I went along."}),"\n",(0,i.jsxs)(e.p,{children:["The only problem was, having got there, I realised I needed a load of ",(0,i.jsx)(e.em,{children:"other stuff"}),' to get things working in the browser too.  So that took about another 10 days.  Within the narrow definition of the work "converting everything to Kotlin" I hit the estimate, but the wider task of "getting it to run in the browser" I was late.']}),"\n",(0,i.jsx)(e.p,{children:"Arguably, the failure here was that I didn't set the success criteria properly at the start."})]})}function u(t={}){const{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},11151:(t,e,n)=>{n.d(e,{Z:()=>s,a:()=>a});var i=n(67294);const o={},r=i.createContext(o);function a(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);